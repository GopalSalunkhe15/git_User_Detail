{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/gopal.salunkhe/Desktop/test/test/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Select from 'react-select';\nimport { useState, useEffect } from \"react\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport selectUser from \"./types/Action\";\nimport { connect } from \"react-redux\";\n\nconst mapStateToProps = state => {\n  debugger;\n  return {\n    selectedUser: state.selectedUser\n  };\n};\n\nconst mapDispatchtoProps = (dispatch, state) => {\n  debugger;\n  return {\n    selectUser: () => {\n      dispatch(selectUser(state));\n    }\n  };\n};\n\nfunction App(props) {\n  _s();\n\n  debugger;\n  const [options, setOption] = useState(\"\");\n  const [gitUserDetail, setGitUserDetail] = useState({});\n  const [avatar, setAvatar] = useState(\"\");\n  const [followers, setFollowers] = useState(0);\n  const [stars, setStars] = useState(\"\");\n  const [fork, setFork] = useState(\"\");\n  const [openIssue, setOpenIsssue] = useState(\"\");\n  const [commits, setCommits] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [categories, setCategories] = useState([]);\n  useEffect(() => {\n    var requestOptions = {\n      method: 'GET',\n      redirect: 'follow'\n    };\n    fetch(\"https://api.github.com/users\", requestOptions).then(response => response.text()).then(result => {\n      let userDetail = JSON.parse(result);\n      setGitUserDetail(userDetail);\n      getOptions(userDetail);\n    }).catch(error => console.log('error', error));\n  }, []);\n\n  const getOptions = userDetail => {\n    let options = [];\n    debugger;\n\n    for (let i = 0; i < userDetail.length; i++) {\n      let option = {\n        value: userDetail[i].login,\n        label: userDetail[i].login,\n        Avatar: userDetail[i].avatar_url,\n        followers: userDetail[i].url,\n        stars: userDetail[i].starred_url,\n        repo: userDetail[i].repos_url\n      };\n      options.push(option);\n    }\n\n    setOption(options);\n  };\n\n  const getStar = star => {\n    let addStar = 0;\n    debugger;\n\n    for (let i = 0; i < star.length; i++) {\n      addStar += star[i].stargazers_count;\n    }\n\n    return addStar;\n  };\n\n  const onHandleChange = e => {\n    getFollowerDetails(e);\n    debugger;\n    props.selectUser(e);\n  };\n\n  async function getFollowerDetails(e) {\n    setIsLoading(true);\n    let forkArray = [];\n    let openIssueCount = [];\n    let categoryArray = [];\n    let followerResponse = await fetch(e.followers);\n    let followersDetais = await followerResponse.json();\n    let repoResponse = await fetch(e.repo);\n    let repoCount = await repoResponse.json();\n    let starResponce = await fetch(`https://api.github.com/users/${e.value}/starred`);\n    let star = await starResponce.json();\n    let starCount = getStar(star);\n\n    for (let i = 0; i < repoCount.length; i++) {\n      forkArray.push(repoCount[i].forks_count);\n      openIssueCount.push(repoCount[i].open_issues_count);\n      categoryArray.push(repoCount[i].full_name);\n    }\n\n    debugger;\n    setFork(forkArray);\n    setStars(starCount);\n    setOpenIsssue(openIssueCount);\n    setFollowers(followersDetais.followers);\n    setAvatar(e.Avatar);\n    setCategories(categoryArray);\n    setIsLoading(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.selectedUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      options: options,\n      onChange: e => onHandleChange(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loding ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 25\n      }, this) : avatar || followers || stars ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          style: {\n            width: \"214px\"\n          },\n          src: avatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"followers : \", followers]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\" star : \", stars]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(HighchartsReact, {\n          Highcharts: Highcharts,\n          options: {\n            title: {\n              text: 'Git user details'\n            },\n            xAxis: {\n              categories: categories\n            },\n            series: [{\n              name: 'commits',\n              data: []\n            }, {\n              name: 'forks',\n              data: fork\n            }, {\n              name: 'issues',\n              data: openIssue\n            }]\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 86\n      }, this) : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"389OCYJ2+dpeknLh/LWz47K/M6Y=\");\n\n_c = App;\nApp.defaultProps = {};\nexport default connect(mapStateToProps, mapDispatchtoProps)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/gopal.salunkhe/Desktop/test/test/src/App.js"],"names":["Select","useState","useEffect","Highcharts","HighchartsReact","selectUser","connect","mapStateToProps","state","selectedUser","mapDispatchtoProps","dispatch","App","props","options","setOption","gitUserDetail","setGitUserDetail","avatar","setAvatar","followers","setFollowers","stars","setStars","fork","setFork","openIssue","setOpenIsssue","commits","setCommits","isLoading","setIsLoading","categories","setCategories","requestOptions","method","redirect","fetch","then","response","text","result","userDetail","JSON","parse","getOptions","catch","error","console","log","i","length","option","value","login","label","Avatar","avatar_url","url","starred_url","repo","repos_url","push","getStar","star","addStar","stargazers_count","onHandleChange","e","getFollowerDetails","forkArray","openIssueCount","categoryArray","followerResponse","followersDetais","json","repoResponse","repoCount","starResponce","starCount","forks_count","open_issues_count","full_name","width","title","xAxis","series","name","data","defaultProps"],"mappings":"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","sourcesContent":["import Select from 'react-select';\nimport {useState,useEffect} from \"react\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport selectUser from \"./types/Action\";\nimport {connect} from \"react-redux\";\nconst mapStateToProps=(state) =>{\n  debugger;\n  return {\n    selectedUser : state.selectedUser\n  }\n}\nconst mapDispatchtoProps = (dispatch,state) =>{\n  debugger;\n  return{\n    selectUser:() =>{\n      dispatch(selectUser(state))\n    }\n  }\n}\nfunction App(props) {\n  debugger;\n  const [options,setOption] = useState(\"\");\n  const [gitUserDetail,setGitUserDetail] = useState({});\n  const [avatar,setAvatar] = useState(\"\");\n  const [followers,setFollowers] = useState(0);\n  const [stars,setStars] = useState(\"\");\n  const [fork,setFork] = useState(\"\");\n  const [openIssue,setOpenIsssue] = useState(\"\");\n  const [commits,setCommits] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [categories,setCategories] = useState([]);\n  \n\n  useEffect(()=>{\n    var requestOptions = {\n      method: 'GET',\n      redirect: 'follow'\n    };\n    \n    fetch(\"https://api.github.com/users\", requestOptions)\n      .then(response => response.text())\n      .then(result =>{ \n        let userDetail = JSON.parse(result)\n        setGitUserDetail(userDetail)\n        getOptions(userDetail)\n      })\n      .catch(error => console.log('error', error));\n  },[]\n  ) \n  \n  const getOptions = (userDetail) =>{\n    let options = [];\n    debugger;\n    for (let i = 0; i < userDetail.length; i++) {\n      let option = {\n        value: userDetail[i].login,\n        label: userDetail[i].login,\n        Avatar:userDetail[i].avatar_url,\n        followers: userDetail[i].url,\n        stars:userDetail[i].starred_url,\n        repo: userDetail[i].repos_url\n      };\n      options.push(option);\n    }\n    setOption(options);\n  }\n  const getStar = (star) => {\n    let addStar = 0;\n    debugger;\n    for(let i= 0 ; i<star.length; i++){\n       addStar += star[i].stargazers_count\n    }\n    return addStar;\n  }\n  const onHandleChange = (e) => {\n     getFollowerDetails(e)\n     debugger;\n     props.selectUser(e)\n  }\n   async function getFollowerDetails (e){\n    setIsLoading(true);\n    let forkArray = [];\n    let openIssueCount = [];\n    let categoryArray = [];\n    let followerResponse = await fetch(e.followers);\n    let followersDetais = await followerResponse.json()\n    let repoResponse = await fetch(e.repo);\n    let repoCount = await repoResponse.json();\n    let starResponce = await fetch(`https://api.github.com/users/${e.value}/starred`);\n    let star = await starResponce.json();\n    let starCount = getStar(star);\n    for(let i =0; i<repoCount.length; i++){\n      forkArray.push(repoCount[i].forks_count);\n      openIssueCount.push(repoCount[i].open_issues_count);\n      categoryArray.push(repoCount[i].full_name)\n    }\n    debugger;\n    setFork(forkArray)\n    setStars(starCount)\n    setOpenIsssue(openIssueCount)\n    setFollowers(followersDetais.followers)\n    setAvatar(e.Avatar)\n    setCategories(categoryArray)\n     setIsLoading(false);  \n  }\n  return (\n    <div className=\"App\">\n     <div>{props.selectedUser}</div>\n       \n       <Select\n        options={options}\n        onChange={(e) => onHandleChange(e)}\n      />\n      <div>\n        {\n          (isLoading) ? <div>Loding ...</div> : (avatar) || (followers) || (stars) ? <div>\n            <img style={{width: \"214px\"}} src={avatar}/>\n           <div> <span> \n              followers : {followers}\n            </span>\n            <span> star : {stars}</span>\n            </div>\n            <HighchartsReact Highcharts={Highcharts} options = {\n        {\n          title: {\n            text: 'Git user details'\n        },xAxis: {\n          categories: categories\n        },\n          series:[\n            {\n              name:'commits',\n              data:[]\n            },\n            {\n              name:'forks',\n              data:fork\n            },\n            {\n              name:'issues',\n              data:openIssue\n            }\n          ]\n        }\n        } />\n\n          </div> : \"\"\n        }       \n      </div>\n       \n    </div>\n  );\n}\nApp.defaultProps={\n  \n}\n\nexport default connect(mapStateToProps,mapDispatchtoProps)(App);\n"]},"metadata":{},"sourceType":"module"}